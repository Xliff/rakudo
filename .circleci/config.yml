version: 2.1

orbs:
    win: circleci/windows@2.2.0

variables:
  build-parameters: &build-parameters
    parameters:
      moar-rev:
        type: string
        default: ""
      nqp-rev:
        type: string
        default: ""
  release-parameters: &release-parameters
    parameters:
      version:
        type: string
        default: ""
      build-rev:
        type: string
        default: "01"


jobs:
  test-linux:
    machine: true
    <<: *build-parameters
    steps:
      - build-rakudo:
          nqp-rev: << parameters.nqp-rev >>
          moar-rev: << parameters.moar-rev >>

  test-macos:
    macos:
      xcode: "10.2.0"
    <<: *build-parameters
    steps:
      - build-rakudo:
          nqp-rev: << parameters.nqp-rev >>
          moar-rev: << parameters.moar-rev >>

  build-linux:
    <<: *release-parameters
    docker:
      - image: centos:6
    steps:
      - run:
          name: Update CentOS 6
          command: |
            yum -y update
            yum clean all
      - run:
          name: Install dependencies
          command:
            yum install git perl perl-core gcc make
      - checkout
      - run:
          name: Build Rakudo
          command: |
            perl Configure.pl --gen-moar --gen-nqp --backends=moar --relocatable
            make
            make install
      - run:
          name: Test the build
          command:
            make test
      - run:
          name: Build Zef
          command: |
            git clone https://github.com/ugexe/zef.git
            cd zef
            ../install/bin/raku -I. bin/zef install .
      - run:
          name: Prepare the package
          command: |
            cp -r tools/build/binary-release/Linux/* install
            cp LICENSE install
            mv install rakudo-<< parameters.version >>
            tar -zcv --owner=0 --group=0 --numeric-owner -f rakudo-linux.tar.gz rakudo-<< parameters.version >>
      - store_artifacts:
          path: rakudo-linux.tar.gz
          destination: rakudo-moar-<< parameters.version >>-<< parameters.build-rev >>-linux-x86_64.tar.gz
      - persist_to_workspace:
          root: .
          paths: rakudo-linux.tar.gz
  build-windows:
    <<: *release-parameters
    executor: win/default
    working_directory: C:\rakudo
    steps:
      - checkout
      - run:
          name: Run build script
          command:
            tools/build/binary-release/build-windows.ps1
      - store_artifacts:
          path: rakudo-win.zip
          destination: rakudo-moar-<< parameters.version >>-<< parameters.build-rev >>-win-x86_64.zip
      - persist_to_workspace:
          root: .
          paths: rakudo-win.zip
  build-macos:
    <<: *release-parameters
    macos:
      xcode: 10.2.0
    steps:
      - run:
          name: Install Perl
          command: brew install perl
      - checkout
      - run:
          name: Build Rakudo
          command: |
            perl Configure.pl --gen-moar --gen-nqp --backends=moar --relocatable
            make
            make install
      - run:
          name: Test the build
          command:
            make test
      - run:
          name: Build Zef
          command: |
            git clone https://github.com/ugexe/zef.git
            cd zef
            ../install/bin/raku -I. bin/zef install .
      - run:
          name: Prepare the package
          command: |
            cp -r tools/build/binary-release/MacOS/* install
            cp LICENSE install
            mv install rakudo-<< parameters.version >>
            tar -zcv --owner=0 --group=0 --numeric-owner -f rakudo-macos.tar.gz rakudo-<< parameters.version >>
      - store_artifacts:
          path: rakudo-macos.tar.gz
          destination: rakudo-moar-<< parameters.version >>-<< parameters.build-rev >>-macos-x86_64.tar.gz
      - persist_to_workspace:
          root: .
          paths: rakudo-macos.tar.gz
  zip-results:
    <<: *release-parameters
    docker:
      - image: alpine
    steps:
      - attach_workspace:
          at: workspace
      - run:
          working_directory: workspace
          command: |
            mkdir rakudo-precomp-<< parameters.version >>-<< parameters.build-rev >>
            mv rakudo-linux.zip rakudo-precomp-$version/rakudo-moar-<< parameters.version >>-<< parameters.build-rev >>-linux-x86_64.zip
            mv rakudo-macos.tar.gz rakudo-precomp-$version/rakudo-moar-<< parameters.version >>-<< parameters.build-rev >>-macos-x86_64.zip
            mv rakudo-win.zip rakudo-precomp-$version/rakudo-moar-<< parameters.version >>-<< parameters.build-rev >>-win-x86_64.zip
            tar -czf rakudo-precomp-<< parameters.version >>-<< parameters.build-rev >>.tgz rakudo-precomp-<< parameters.version >>-<< parameters.build-rev >>
      - store_artifacts:
          path: workspace/rakudo-precomp-<< parameters.version >>-<< parameters.build-rev >>.tgz
          destination: rakudo-precomp-<< parameters.version >>-<< parameters.build-rev >>.tgz


commands:
  build-rakudo:
    description: "Build MoarVM, NQP, and Rakudo"
    <<: *build-parameters
    steps:
      - checkout
      - run:
          name: Build and test rakudo
          command: |
            perl Configure.pl --gen-moar=<< parameters.moar-rev >> --gen-nqp=<< parameters.nqp-rev >>
            make test
            make install

workflows:
  version: 2
  test:
    jobs:
      - test-linux
      - test-linux:
          nqp-rev: HEAD
          moar-rev: HEAD

      - test-macos
      - test-macos:
          nqp-rev: HEAD
          moar-rev: HEAD
  build-release:
    jobs:
      - build-linux:
          filters:
            tags:
              only: /\n\n\n\n\.\n\n(\.\n+)?/
              #branches:
              #ignore: /.*/
          version: $CIRCLE_TAG
      - build-macos:
          filters:
            tags:
              only: /\n\n\n\n\.\n\n(\.\n+)?/
              #branches:
              #ignore: /.*/
          version: $CIRCLE_TAG
      - build-windows:
          filters:
            tags:
              only: /\n\n\n\n\.\n\n(\.\n+)?/
              #            branches:
              #ignore: /.*/
          version: $CIRCLE_TAG
      - zip-results:
          requires:
            - build-linux
            - build-macos
            - build-windows
          filters:
            tags:
              only: /\n\n\n\n\.\n\n(\.\n+)?/
              #            branches:
              #ignore: /.*/
          version: $CIRCLE_TAG

